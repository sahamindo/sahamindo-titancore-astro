---
interface Props {
  symbol: string; // e.g., "BBCA.JK"
  inline?: boolean;
  showPrice?: boolean; // Future enhancement
  className?: string;
}

const { symbol, inline = true, className = "" } = Astro.props;

// Validate Indonesian stock symbol format
const isValidSymbol = /^[A-Z]{4}\.JK$/.test(symbol);

if (!isValidSymbol) {
  console.warn(`Invalid stock symbol format: ${symbol}. Expected format: XXXX.JK`);
}

const baseClasses = inline 
  ? "inline-flex items-center gap-1 px-2 py-0.5 rounded-md" 
  : "flex items-center gap-2 px-3 py-1.5 rounded-lg";

const stockClasses = `
  ${baseClasses}
  bg-blue-100 dark:bg-blue-900/30
  text-blue-800 dark:text-blue-200
  border border-blue-200 dark:border-blue-800
  font-mono font-semibold
  ${inline ? 'text-sm' : 'text-base'}
  transition-colors hover:bg-blue-200 dark:hover:bg-blue-900/50
  ${className}
`;
---

{isValidSymbol ? (
  <span 
    class={stockClasses}
    title={`Kode saham: ${symbol}`}
    data-stock-symbol={symbol}
  >
    <svg 
      class={inline ? "w-3 h-3" : "w-4 h-4"} 
      fill="currentColor" 
      viewBox="0 0 20 20"
    >
      <path d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z" />
    </svg>
    <span>{symbol}</span>
  </span>
) : (
  <span class={`${baseClasses} bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 ${className}`}>
    {symbol}
  </span>
)}

<style>
  [data-stock-symbol] {
    cursor: default;
    user-select: all;
  }
  
  @media (max-width: 640px) {
    [data-stock-symbol] {
      font-size: 0.875rem;
    }
  }
</style>